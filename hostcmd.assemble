  TITLE 'HOSTCMD - Issue commands from REXX programs'                   HOS00010
HOSTCMD  CSECT                                                          HOS00020
**************************************************************          HOS00030
* This programs issues commands and subcommands in CMS for   *          HOS00040
* REXX programs. The REXX Address statement defines the      *          HOS00050
* command or subcommand environment that will receive and    *          HOS00060
* execute the command character string.                      *          HOS00070
*                                                            *          HOS00080
* It also implements the entry point to the EXECCOMM         *          HOS00090
* subcommand entry into the interpretor. Programs like       *          HOS00100
* EXECIO issue the EXECCOMM subcommand to set values for,    *          HOS00110
* retrieve values from, and drop REXX variables.             *          HOS00120
**************************************************************          HOS00130
         USING CMSCRAB,R13                                              HOS00140
         USING HOSTCMD,R12                                              HOS00150
         USING NUCON,0                                                  HOS00160
@@HOSTCM PDPPRLG CINDEX=0,FRAME=WKAREALN,BASER=12,ENTRY=YES             HOS00170
         LA    R15,@@HOSTCM-HOSTCMD                                     HOS00180
         SLR   R12,R15                                                  HOS00190
         USING HOSTCMD,R12                                              HOS00200
**************************************************************          HOS00210
* Retrieve parameters. Entry R1 points to a two word argument
* list. The first word is the address of an LSTR structure
* (defined below) for the command line to be executed, and
* word two is the address of an LSTR structure for the name
* of the REXX address environment.
* The LSTR structure is defined in the LSTR DSECT below.
**************************************************************          HOS00250
         LM     R4,R5,0(R1)       Ptr to cmd, Ptr to env name           HOS00260
*                                                                       HOS00460
**************************************************************          HOS00470
* Build a tokenized plist and an extended plist from                    HOS00480
* the input command line string.                                        HOS00490
**************************************************************          HOS00500
         USING  LSTR,R4           Command line
         L      R1,LSTRPSTR       Address of command line
         L      R0,LSTRLEN        Length of command line
         DROP   R4
*                                                                       HOS00560
         IPK    ,                                                       HOS00570
         SPKA   0                 Key 0                                 HOS00580
         SSM    *+1               Disable                               HOS00590
         L      R15,ASCANN        Build tokenied plist                  HOS00600
         BALR   R14,R15              and extended plist                 HOS00610
         LTR    R15,R15                                                 HOS00620
         BNZ    BADARG                                                  HOS00630
*                                                                       HOS00640
         L     R15,NUCUPPER       Standard uppercase table              HOS00650
         LR    R4,R1              Tokenized plist pointer               HOS00660
         LR    R3,R0              Tokenized plist length                HOS00670
*                                                                       HOS00680
         CH    R3,*+10            Less than or equal to max?            HOS00690
         BNH   *+8                OK                                    HOS00700
         LA    R3,256             Else use max                          HOS00710
*                                                                       HOS00720
         BCTR  R3,0                                                     HOS00730
         EX    R3,UPTRANS         Uppercase this section                HOS00740
*                                                                       HOS00750
         SPKA   0(R2)             Enable                                HOS00760
         SSM    =X'FF'            User key                              HOS00770
         B     SETENVNM           Go set environment name
UPTRANS  TR    0(*-*,R4),0(R15)                                         HOS00790
**************************************************************
* Create an 8 byte uppercase version of the environment name
**************************************************************
SETENVNM DS     0H
         USING  LSTR,R5           Environment name
         MVC    ENVNAME,=CL8'COMMAND' Assume standard env.
         MVC    ENVNAME+8(8),=8X'FF'  CMS command fence
         L      R2,LSTRPSTR       Address of environment name
         L      R3,LSTRLEN        Length of environment name
         LTR    R3,R3             Null string is
*                                    another way to specify
*                                       address 'COMMAND'
         BZ     ENVSET
         CH     R3,*+10           Truncate length
         BNH    *+8                 to 8 bytes
         LA     R3,8
*
         MVI    ENVNAME,C' '      Set Environment
         MVC    ENVNAME+1(8-1),ENVNAME  Name and
         OC     ENVNAME(*-*),0(R2)      uppercase
         EX     R3,*-6
ENVSET   DS     0H
         DROP   R5
*------------------------------------------------------------*          HOS00800
* Setup EXECCOMM subcommand environment                      *          HOS00810
*------------------------------------------------------------*          HOS00820
SETECOM  DS    0H                                                       HOS00830
         MVC   SBSL(SBSLLEN),SBSP Set MF=L pattern                      HOS00970
         SUBCOM SET,NAME='EXECCOMM',ENTRY=EXECCOMM,                    *HOS01000
               UWORD=(R13),INTTYPE=ALL,KEY=USER,                       *
               MF=(E,SBSL)                                              HOS01020
*------------------------------------------------------------*          HOS01030
* address COMMAND is called with a call type X'01' plist     *
*------------------------------------------------------------*          HOS01050
         CLC   ENVNAME,=CL8'COMMAND' Standard environment?              HOS01070
         BNE   CHKSUBCM           Try subcommand environments           HOS01080
         LA    R1,CMNDLIST                                              HOS01090
         LA    R0,NUCPLIST        Point to contructed EPLIST            HOS01100
         ICM   R1,B'1000',=X'01'                                        HOS01110
         SVC   202            Run command now                           HOS01120
         DC    AL4(1)                                                   HOS01130
         B     GOBACK             Pass back the return code             HOS01140
*------------------------------------------------------------*          HOS01150
* Special command environment. Look for a subcommand         *          HOS01160
* processor to handle it.                                    *          HOS01170
*------------------------------------------------------------*          HOS01180
CHKSUBCM DS    0H                                                       HOS01190
         MVC   SBQL(SBQLLEN),SBQP Set MF=L pattern                      HOS01200
         SUBCOM QUERY,NAME=ENVNAME,MF=(E,SBQL)                          HOS01210
         LTR   R15,R15                                                  HOS01220
         BNZ   ENVUNKN            Unknown environment                   HOS01230
* For a subcommand call, R1 point to the subcommand                     HOS01240
* environment name, followed by a plist fence                           HOS01250
         LA    R1,ENVNAME                                               HOS01260
* The extended plist 1st word points to the subcommand name             HOS01280
* The 2nd word points to the beginning of the argument
* string. The third word points past the last argument.                 HOS01300
         MVC   EPLIST(16),NUCPLIST Copy EPLIST from ASCANN              HOS01310
         MVC   EPLIST+4(4),EPLIST Adjust second word of EP              HOS01320
         ST    R1,EPLIST          Adjust first word                     HOS01330
         LA    R0,EPLIST           and extended plist                   HOS01340
         ICM   R1,B'1000',=X'02'  Subcommand call                       HOS01350
         SVC   202                Call the subcommand                   HOS01360
         DC    AL4(1)                                                   HOS01370
         B     GOBACK             Pass back the return code             HOS01380
*                                                                       HOS01390
BADARG   DS    0H                                                       HOS01400
ENVUNKN  DS    0H                                                       HOS01410
         L     R15,=F'-3'                                               HOS01420
GOBACK   DS    0H                                                       HOS01430
         LR    R3,R15             Hold the command return code
         MVC   SBCL(SBCLLEN),SBCP Set MF=L pattern
         SUBCOM CLR,NAME='EXECCOMM',MF=(E,SBCL)
         LR    R15,R3             Get back the command RC
         PDPEPIL                  Return to caller
*                                                                       HOS01450
*------------------------------------------------------------*          HOS01460
*                                                                       HOS01470
**************************************************************          HOS01480
* This is the entry point for the EXECCOMM REXX subcommand.  *          HOS01490
* It is reached via an SVC 202 from a program called from    *          HOS01500
* a REXX EXEC. It reconnects to the GCC runtime environment  *          HOS01510
* of the REXX program.                                       *          HOS01520
**************************************************************          HOS01530
         ENTRY EXECCOMM                                                 HOS01540
EXECCOMM DS    0D                                                       HOS01550
         STM   R14,R12,12(R13)    Save entry regs                       HOS01560
         LR    R12,R15                                                  HOS01570
         LA    R15,EXECCOMM-HOSTCMD                                     HOS01580
         SLR   R12,R15            Establish common base                 HOS01590
         LR    R3,R13             Hold EXECCOMM R13                     HOS01660
         USING HOSTCMD,R12                                              HOS01600
         USING SCBLOCK,R2                                               HOS01610
         L     R13,SCBWKWRD       Load HOSTCMD R13
*                                                                       HOS01680
* Now R13 points to the GCC savearea in use when HOSTCOM                HOS01690
* called the external program with address COMMAND, or                  HOS01700
* with an address call to a subcommand environment.                     HOS01710
* Since we have a C runtime environment now, we can call                HOS01720
* any C program CSECTs in the BREXX module.
*                                                                       HOS01760
         LR    R5,R0              EXECCOMM EPLIST Word 4
         L     R5,12(,R5)          is a pointer to a chain
         USING SHVBLOCK,R5           chain of SHVBLOCKS
SHVLOOP  DS    0H                 Process next SHVBLOCK
         L     R15,SHVNAML        Length of the variable name
         L     R14,SHVNAMA        Address of the name
         LA    R0,VARNAME
         LA    R1,1(,R15)         Output 1 longer than input
         MVCL  R0,R14             Copy name and append a null
         L     R15,SHVNAML        Length of name
         BCTR  R15,0                -1 for execute
         L     R14,NUCUPPER
         B     *+10
         TR    VARNAME(*-*),0(R14) Uppercase the var name
         EX    R15,*-6            Now we have a C string
*
* Build an LSTR structure for the variable name
         LA    R4,NAMELSTR        Build an LSTR for the
         USING LSTR,R4              variable name
         LA    R15,VARNAME
         ST    R15,LSTRPSTR       Address of the name
         L     R15,SHVNAML
         ST    R15,LSTRLEN        Length of the name
         ST    R15,LSTRLMAX       Max length
         LA    R15,LSTRING
         STH   R15,LSTRTYPE       Type STRING
*
* Build an LSTR structure for the variable value
*
*    The plist is setup for FETCH operation with the
*    target buffer address provided by the EXECCOMM
*    caller.
         LA    R4,VALULSTR        Build an LSTR for the
         USING LSTR,R4              variable value
         L     R15,SHVVALA
         ST    R15,LSTRPSTR       Address of the value
         XC    LSTRLEN,LSTRLEN    Length of the value
         L     R15,SHVBUFL        Length of the buffer
         ST    R15,LSTRLMAX       Max length
         LA    R15,LSTRING
         STH   R15,LSTRTYPE       Type STRING
*
* Call "RXE" to implement the data transfers specified in
* the SHVBLOCK structure passed as an argument to EXECCOMM.             HOS01790
         SR    R0,R0              Assume FETCH
         CLI   SHVCODE,SHVFETCH   Is it?
         BE    RXECALL
*
* Modify the LSTR structure for the variable value
*
*    The plist is setup for a STORE operation with the
*    source buffer address provided by the EXECCOMM
*    caller.
         LA    R0,1               Assume STORE parameter
         L     R15,SHVVALL        Actual value
         ST    R15,LSTRLEN        Length of the value
         ST    R15,LSTRLMAX       Max length
         CLI   SHVCODE,SHVSTORE   Is it?
         BE    RXECALL
*
* EXECIO does not use the EXECCOMM DROPV operation
*    We will implement this later if the need arises.
         LA    R0,2               Assume DROPV parameter
         CLI   SHVCODE,SHVDROPV   Is it?
*        BE                       ***** Ignore for now ******
*
         MVI   SHVRET,SHVBADF     Bad function code
         B     RXERET             Tell the caller bad function
*
RXECALL  DS    0H
         ST    R0,RXECALLT        Set call type
         LA    R0,NAMELSTR
         ST    R0,RXENAME         Set variable name Lstr ptr
         LA    R0,VALULSTR
         ST    R0,RXEVALUE        Set variable name Lstr ptr
         LA    R1,RXEPLIST        Plist address
         L     R15,=V(RXEXCM)     Call RXEXCOMM C
         BALR  R14,R15              to perform operation
         MVC   SHVVALL,LSTRLEN    Return actual length
         DROP  R4
*                                                                       HOS01810
* Now restore the EXECCOMM runtime and return to the caller             HOS01820
* of EXECCOMM.                                                          HOS01830
*                                                                       HOS01840
RXERET   DS     0H
         SR     R15,R15           Set the return code
         IC     R15,SHVRET
         LR     R13,R3            Back to EXECCOMM R13                  HOS01850
         L      R14,12(,R13)
         LM     R0,R12,20(R13)
         BR     R14                                                     HOS01880
  TITLE 'HOSTCMD: Constants and literals'                               HOS01890
*------------------------------------------------------------*          HOS01900
SBQP     SUBCOM QUERY,NAME='EXECCOMM',MF=L                              HOS01910
SBSP     SUBCOM SET,NAME='EXECCOMM',ENTRY=EXECCOMM,MF=L                 HOS01920
SBCP     SUBCOM CLR,NAME='EXECCOMM',MF=L
         LTORG ,                                                        HOS01960
  TITLE 'HOSTCMD: Savearea and variables'                               HOS01970
*
* The LSTR data structure is used throughout BREXX to define
* BREXX variables.
*
LSTR     DSECT
LSTRPSTR DS    A                  Pointer to data
LSTRLEN  DS    F                  Current length of the data
LSTRLMAX DS    F                  Max data bytes allocated
LSTRTYPE DS    H                  Data type
LSTRING  EQU   0                     Character string data
LINTEGER EQU   1                     Integer fata
LREAL    EQU   2                     Floating point data
LSTRSIZE EQU   *-LSTR
*
* This is the HOSTCMD dynamic storage area addressed by R13
*
         CMSCRAB
         ORG   MAINSTK                                                  HOS01990
SUBCOML  SUBCOM QUERY,NAME='ENV',MF=L                                   HOS02000
SUBCOMLL EQU   *-SUBCOML                                                HOS02010
SBQL     SUBCOM QUERY,NAME='EXECCOMM',MF=L                              HOS02020
SBQLLEN  EQU   *-SBQL                                                   HOS02030
SBSL     SUBCOM SET,NAME='EXECCOMM',ENTRY=EXECCOMM,MF=L                 HOS02040
SBSLLEN  EQU   *-SBSL                                                   HOS02050
SBCL     SUBCOM CLR,NAME='EXECCOMM',MF=L
SBCLLEN  EQU   *-SBCL
*                                                                       HOS02060
ENVNAME  DS    CL8                Environment name                      HOS02070
         DS    8X'FF'             FENCE                                 HOS02080
*                                                                       HOS02090
EPLIST   DS    0D                                                       HOS02100
         DS    6A                 Extended plist                        HOS02110
*
RXEPLIST DS    0A
RXECALLT DS    F                  0 = fetch value, 1 = set value
RXENAME  DS    A                  Ptr to NAMELSTR
RXEVALUE DS    A                  Ptr to VALULSTR
*
NAMELSTR DS    0D                 Lstring for variable NAME
         DS    (LSTRSIZE)X
*
VALULSTR DS    0D                 Lstring for variable VALUE
         DS    (LSTRSIZE)X
*
VARNAME  DS    CL256              Uppercased variable name
WKAREALN EQU   *-CMSCRAB                                                HOS02120
         SVCSAVE ,                                                      HOS02130
         REGEQU ,                                                       HOS02140
         SCBLOCK ,                                                      HOS02150
         SHVBLOCK ,
         NUCON ,                                                        HOS02160
         END                                                            HOS02170
